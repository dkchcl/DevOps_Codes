trigger:
 branches:
   include:
     - main
       features/*

parameters:
- name: init
  displayName: init?
  type: string
  values:
  - true
  - false


variables:
- name: workdir
  value: '$(System.DefaultWorkingDirectory)/Infra'
- name: service_connection
  value: 'newsc'

jobs:
- job: TerraformBuild
  displayName: Terraform Build
  pool: New_agent
  steps:
  - task: TerraformInstaller@1
    displayName: Terraform Install
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTask@5
    displayName: Terraform init
    condition: eq(${{parameters.init}}, 'true')
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: $(workdir)
      backendServiceArm: $(service_connection)
      backendAzureRmStorageAccountName: 'dkcstorageaccount'
      backendAzureRmContainerName: 'dkccontainer'
      backendAzureRmKey: 'raju.tfstate'

  - task: TerraformTask@5
    displayName: Terraform Validate
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: $(workdir)

  - task: TerraformTask@5
    displayName: Terraform FMT
    inputs:
      provider: 'azurerm'
      command: 'custom'
      workingDirectory: $(workdir)
      outputTo: 'console'
      customCommand: 'fmt'
      environmentServiceNameAzureRM: $(service_connection)

  - task: TerraformTask@5
    displayName: Terraform Plan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: $(workdir)
      environmentServiceNameAzureRM: $(service_connection)


- job: ManualApproval
  displayName: Manual Approval
  dependsOn: TerraformBuild
  pool: Server
  steps:
  - task: ManualValidation@1
    displayName: Manual Validation
    inputs:
      notifyUsers: 'dkchcl'

- job: TerraformApply
  displayName: Terraform Apply
  dependsOn: ManualApproval
  pool: New_agent
  steps:
  - task: TerraformTask@5
    displayName: Terraform init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: $(workdir)
      backendServiceArm: $(service_connection)
      backendAzureRmStorageAccountName: 'dkcstorageaccount'
      backendAzureRmContainerName: 'dkccontainer'
      backendAzureRmKey: 'raju.tfstate'  
  - task: TerraformTask@5
    displayName: Terraform Apply
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: $(workdir)
      environmentServiceNameAzureRM: $(service_connection)


